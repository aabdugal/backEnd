{"version":3,"sources":["services/person.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","object","post","id","put","delete","Persons","props","filteredNames","persons","showResults","filter","person","name","toLowerCase","includes","map","key","number","onClick","deleteP","Filter","value","onChange","filterChange","PersonForm","onSubmit","addDetails","newName","handleChange","newNumber","handleNumberChange","type","Notification","m","message","category","className","App","useState","setPersons","useEffect","personService","initPerson","setNewName","setNumber","setResults","errorMessage","setErrorMessage","event","target","preventDefault","findIndex","window","confirm","find","obj","newP","mess","setTimeout","newPers","catch","error","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3c34304.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(\n        response => response.data\n    )\n}\n\nconst create = (object) => {\n    const req = axios.post(baseUrl,object)\n    return req.then(\n        response=>response.data\n    )\n}\n\nconst update = (id,object) => {\n    // const req = axios.put(`${'http://localhost:3001/persons'}/${id}`, object)\n    const req = axios.put(`${baseUrl}/${id}`, object)\n    return req.then(\n        response=>response.data\n    )\n}\n\nconst deletePerson = (id) => {\n    const req = axios.delete(`${baseUrl}/${id}`)\n    return req.then(\n        response => response.data\n    )\n}\n\nexport default {\n    getAll, create, update, deletePerson\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from './services/person'\nimport './index.css'\n\nconst Persons = (props) => {\n\tvar filteredNames = props.persons\n\tif(props.showResults){\n\t\tfilteredNames = props.persons.filter(person => person.name.toLowerCase().includes(props.showResults.toLowerCase()))\n\t}\n\tconst disp = () => filteredNames.map(person=>\n\t\t\t<li key={person.name}> {person.name} {person.number} <button onClick={()=> props.deleteP(person.id)}>delete</button></li>\n\t)\n\treturn (\n\n\t\t<ul>{disp()}</ul>\n\t)\n\n}\n\nconst Filter = (props) => {\n\treturn (\n\t\t<div>\n\t\t  filter shown with <input\n\t\t\tvalue={props.showResults}\n\t\t\tonChange = {props.filterChange}\n\t\t  />\n\t  </div>\n\t)\n}\n\nconst PersonForm = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={props.addDetails}>\n\t\t\t\t<div>\n\t\t\t\tname: <input\n\t\t\t\t\t\tvalue={props.newName}\n\t\t\t\t\t\tonChange={props.handleChange} \n\t\t\t\t\t\t/> <br/>\n\t\t\t\tnumber: <input \n\t\t\t\t\t\tvalue={props.newNumber}\n\t\t\t\t\t\tonChange = {props.handleNumberChange}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t\t</div>\n     \t\t</form>\n\t\t</div>\n\t)\n}\n\nconst Notification = (props) => {\n\tif(props.m.message === null){\n\t\treturn null\n\t}\n\tif(props.m.category === \"success\"){\n\t\treturn(\n\t\t\t<div className=\"success\">\n\t\t\t\t{props.m.message}\n\t\t\t</div>\n\t\t)\n\t}\n\treturn(\n\t\t<div className=\"error\">\n\t\t\t{props.m.message}\n\t\t</div>\n\t)\n\t\n}\n\nconst App = () => {\n\tconst [ persons, setPersons] = useState([])\n\tuseEffect(()=> {\n\t\tpersonService.getAll().then(initPerson => {\n\t\t\tsetPersons(initPerson)\n\t\t})\n\t},[])\n   \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNumber] = useState('')\n  const [showResults, setResults] = useState('')\n  const [errorMessage, setErrorMessage] = useState({\n\t  message: null,\n\t  category: null\n  })\n \n  const addDetails = (event) => {\n\t  event.preventDefault()\n\t//   console.log(event.target)\n\t\n\t\t// console.log(persons[1]);\n\n\t\tif(persons.findIndex(person => person.name === newName) > -1 ){\n\t\t\tif(window.confirm(newName + ' is already added phonebook, replace the old number with new one?')){\n\t\t\t\tconst id = persons.find(person=>person.name===newName).id\n\t\t\t\tconst obj = {\n\t\t\t\t\tname: newName,\n\t\t\t\t\tnumber: newNumber,\n\t\t\t\t}\n\t\t\t\tpersonService\n\t\t\t\t.update(id, obj)\n\t\t\t\t.then(newP => {\n\t\t\t\t\tconst mess = {\n\t\t\t\t\t\tmessage: `Added ${newP.name}`,\n\t\t\t\t\t\tcategory: 'success'\n\t\t\t\t\t}\n\t\t\t\t\tsetErrorMessage(mess)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetErrorMessage({...errorMessage, message: null})\n\t\t\t\t\t}, 5000)\n\t\t\t\t\tconst newPers = persons.map(person=> person.id!==id ? person : newP)\n\t\t\t\t\tsetPersons(newPers)\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t\t.catch(error=>{\n\t\t\t\t\tconst mess = {\n\t\t\t\t\t\tmessage: `${obj.name} has already been removed from the database `,\n\t\t\t\t\t\tcategory: 'error'\n\t\t\t\t\t}\n\t\t\t\t\tsetErrorMessage(mess)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetErrorMessage({...errorMessage, message: null})\n\t\t\t\t\t}, 5000)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconst obj = {\n\t\t\t\tname: newName,\n\t\t\t\tnumber: newNumber\n\t\t\t}\n\t\t\t// console.log(persons)\n\t\t\t// console.log(obj)\t\n\t\t\tpersonService\n\t\t\t\t.create(obj)\n\t\t\t\t.then(newP => {\n\n\t\t\t\t\tconst mess = {\n\t\t\t\t\t\tmessage: `Added ${newP.name}`,\n\t\t\t\t\t\tcategory: 'success'\n\t\t\t\t\t}\n\t\t\t\t\tsetErrorMessage(mess)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetErrorMessage({...errorMessage, message: null})\n\t\t\t\t\t}, 5000)\n\t\t\t\t\tsetPersons(persons.concat(newP))\n\t\t\t\t\tsetNewName('')\n\t\t\t\t\tsetNumber('')\n\t\t\t\t})\n\t\t\t\t.catch(error=>{\n\t\t\t\t\tconst mess = {\n\t\t\t\t\t\tmessage: error.response.data.error,\n\t\t\t\t\t\tcategory: 'error'\n\t\t\t\t\t}\n\t\t\t\t\tsetErrorMessage(mess)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetErrorMessage({...errorMessage, message: null})\n\t\t\t\t\t}, 5000)\n\t\t\t\t})\n\t\t\t\n\t\t}\n\t\n  }\n\n  const deletePersonHandler  = (id) => {\n\t\tconst p = persons.find( person => person.id === id)\n\t\tif(window.confirm(`Delete ${p.name} ?`)){\n\t\t\tpersonService\n\t\t\t\t.deletePerson(id)\n\t\t\t\t.then(response => {\n\t\t\t\t\tsetPersons(persons.filter(person=>person.id!==id))\n\t\t\t\t})\n\t\t}\n  }\n  const handleChange = (event) => {\n\t//   console.log(event.target.value)\n\t  setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n\t//   console.log(event.target.value)\n\t  setNumber(event.target.value)\n  }\n  const filterChange = (event) => {\n\t  setResults(event.target.value)\n  }\n\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\t  <Notification m={errorMessage} />\n\t  <Filter showResults={showResults} filterChange={filterChange} />\n\t  <h2>add a new </h2>\n      <PersonForm addDetails={addDetails} newName={newName} handleChange={handleChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} showResults={showResults} deleteP={deletePersonHandler} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}